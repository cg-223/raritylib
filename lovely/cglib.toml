[manifest]
version = "1.0.0"
dump_lua = true
priority = 2


[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = "card_type = (debuffed and AUT.card_type ~= 'Enhanced') and localize('k_debuffed') or card_type"
position = "after"
payload = '''
if card and card.config and card.config.center and card.config.center.rarity then
    if CGLIBRARITIES and CGLIBRARITIES[card.config.center.rarity] then
        card_type = CGLIBRARITIES[card.config.center.rarity].name
    end
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "if _type == 'Joker' then"
position = "after"
payload = '''
            local rarity
            local rand = pseudorandom(_G[gcparea == 'ERROR' and 'predict_pseudoseed' or 'pseudoseed']('rarity'..G.GAME.round_resets.ante..(_append or '')))
            if _rarity then
                rarity = _rarity
            else
                local rarcap, rarregions = CGLIBGETWEIGHTS()
                rand = rand * rarcap
                for i, v in pairs(rarregions) do
                    if rand > v[1] and rand < v[2] then
                        rarity = i
                    end
                end
            end
            pooloverride, poolkeyoverride = G.P_JOKER_RARITY_POOLS[rarity], 'Joker'..rarity..((not _legendary and _append) or '')
            
        end
        if false then
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "--cull the pool"
position = "before"
payload = '''
    if pooloverride then
        _starting_pool, _pool_key = pooloverride, poolkeyoverride
        pooloverride = nil
        poolkeyoverride = nil
    end
'''
match_indent = true

